{
  "paragraphs": [
    {
      "text": "%md\n# Model evaluation\nThis notebook will be used to test and evaluate the model using the full data available.\nThe pipeline is built to extract the data daily but in order to speed up the model development and avoid space contraints I will start from the full dataset provided.",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.020",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eModel evaluation\u003c/h1\u003e\n\u003cp\u003eThis notebook will be used to test and evaluate the model using the full data available.\u003cbr /\u003e\nThe pipeline is built to extract the data daily but in order to speed up the model development and avoid space contraints I will start from the full dataset provided.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368020_2113254711",
      "id": "paragraph_1693064611214_1520762815",
      "dateCreated": "2023-08-27 16:56:08.020",
      "status": "READY"
    },
    {
      "text": "%md\n## Data loading\nData is downloaded from the repository directly using curl and stored locally for easier access.\nData is then read into a PySpark dataframe from the downloaded file.",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.021",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eData loading\u003c/h2\u003e\n\u003cp\u003eData is downloaded from the repository directly using curl and stored locally for easier access.\u003cbr /\u003e\nData is then read into a PySpark dataframe from the downloaded file.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368021_1642417670",
      "id": "paragraph_1693064758010_773984666",
      "dateCreated": "2023-08-27 16:56:08.021",
      "status": "READY"
    },
    {
      "text": "%sh\ncurl -sSl --create-dirs -o /usr/share/covid_data/raw/full.csv https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.021",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368021_1696819925",
      "id": "paragraph_1693046102817_145503627",
      "dateCreated": "2023-08-27 16:56:08.021",
      "status": "READY"
    },
    {
      "text": "%pyspark\n# Relevant imports\nfrom pyspark import SparkFiles\nfrom pyspark.sql import functions as F",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.021",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368021_2037496782",
      "id": "paragraph_1693041790499_1993314575",
      "dateCreated": "2023-08-27 16:56:08.021",
      "status": "READY"
    },
    {
      "text": "%pyspark\ndf \u003d spark.read \\\n    .option(\"header\", \"true\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .csv(f\"/usr/share/covid_data/raw/full.csv\")\ndf.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.021",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- data: timestamp (nullable \u003d true)\n |-- stato: string (nullable \u003d true)\n |-- ricoverati_con_sintomi: integer (nullable \u003d true)\n |-- terapia_intensiva: integer (nullable \u003d true)\n |-- totale_ospedalizzati: integer (nullable \u003d true)\n |-- isolamento_domiciliare: integer (nullable \u003d true)\n |-- totale_positivi: integer (nullable \u003d true)\n |-- variazione_totale_positivi: integer (nullable \u003d true)\n |-- nuovi_positivi: integer (nullable \u003d true)\n |-- dimessi_guariti: integer (nullable \u003d true)\n |-- deceduti: integer (nullable \u003d true)\n |-- casi_da_sospetto_diagnostico: integer (nullable \u003d true)\n |-- casi_da_screening: integer (nullable \u003d true)\n |-- totale_casi: integer (nullable \u003d true)\n |-- tamponi: integer (nullable \u003d true)\n |-- casi_testati: integer (nullable \u003d true)\n |-- note: string (nullable \u003d true)\n |-- ingressi_terapia_intensiva: integer (nullable \u003d true)\n |-- note_test: string (nullable \u003d true)\n |-- note_casi: string (nullable \u003d true)\n |-- totale_positivi_test_molecolare: integer (nullable \u003d true)\n |-- totale_positivi_test_antigenico_rapido: integer (nullable \u003d true)\n |-- tamponi_test_molecolare: integer (nullable \u003d true)\n |-- tamponi_test_antigenico_rapido: integer (nullable \u003d true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368021_1041571339",
      "id": "paragraph_1693041878008_33305209",
      "dateCreated": "2023-08-27 16:56:08.021",
      "status": "READY"
    },
    {
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.022",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368022_1713817805",
      "id": "paragraph_1693065493151_850213405",
      "dateCreated": "2023-08-27 16:56:08.022",
      "status": "READY"
    },
    {
      "text": "%md\n## Data cleaning\nData is cleaned by performing the following steps:\n- columns are renamed from italian to english\n- datatypes are adjusted when necessary\n",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.022",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eData cleaning\u003c/h2\u003e\n\u003cp\u003eData is cleaned by performing the following steps:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ecolumns are renamed from italian to english\u003c/li\u003e\n\u003cli\u003edatatypes are adjusted when necessary\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368022_1257470513",
      "id": "paragraph_1693064830919_25354606",
      "dateCreated": "2023-08-27 16:56:08.022",
      "status": "READY"
    },
    {
      "text": "%pyspark\n# Column renaming\ndf \u003d df.withColumnRenamed(\"data\", \"collection_date\")\ndf \u003d df.withColumnRenamed(\"nuovi_positivi\", \"new_positive_cases\")\ndf \u003d df.withColumnRenamed(\"stato\", \"country_cod\")\ndf \u003d df.withColumnRenamed(\"ricoverati_con_sintomi\", \"admitted_with_symptoms\")\ndf \u003d df.withColumnRenamed(\"terapia_intensiva\", \"intensive_care\")\n\n# Data types transformation\ndf \u003d df.withColumn(\"collection_date\",F.to_date(F.col(\"collection_date\"))) \n\n# New columns creation\ndf \u003d df.withColumn(\"collection_id\",F.md5(F.concat(F.col(\"collection_date\"),F.col(\"country_cod\"))))",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.022",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368022_1158182763",
      "id": "paragraph_1693042099009_1716716946",
      "dateCreated": "2023-08-27 16:56:08.022",
      "status": "READY"
    },
    {
      "text": "%pyspark\ndf.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.022",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- collection_date: date (nullable \u003d true)\n |-- country_cod: string (nullable \u003d true)\n |-- ricoverati_con_sintomi: integer (nullable \u003d true)\n |-- terapia_intensiva: integer (nullable \u003d true)\n |-- totale_ospedalizzati: integer (nullable \u003d true)\n |-- isolamento_domiciliare: integer (nullable \u003d true)\n |-- totale_positivi: integer (nullable \u003d true)\n |-- variazione_totale_positivi: integer (nullable \u003d true)\n |-- new_positive_cases: integer (nullable \u003d true)\n |-- dimessi_guariti: integer (nullable \u003d true)\n |-- deceduti: integer (nullable \u003d true)\n |-- casi_da_sospetto_diagnostico: integer (nullable \u003d true)\n |-- casi_da_screening: integer (nullable \u003d true)\n |-- totale_casi: integer (nullable \u003d true)\n |-- tamponi: integer (nullable \u003d true)\n |-- casi_testati: integer (nullable \u003d true)\n |-- note: string (nullable \u003d true)\n |-- ingressi_terapia_intensiva: integer (nullable \u003d true)\n |-- note_test: string (nullable \u003d true)\n |-- note_casi: string (nullable \u003d true)\n |-- totale_positivi_test_molecolare: integer (nullable \u003d true)\n |-- totale_positivi_test_antigenico_rapido: integer (nullable \u003d true)\n |-- tamponi_test_molecolare: integer (nullable \u003d true)\n |-- tamponi_test_antigenico_rapido: integer (nullable \u003d true)\n |-- collection_id: string (nullable \u003d true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368022_692457003",
      "id": "paragraph_1693064581294_12888142",
      "dateCreated": "2023-08-27 16:56:08.022",
      "status": "READY"
    },
    {
      "text": "%pyspark\n# Feature Engineering\ndata \u003d data.withColumn(\"date\", data[\"date_column\"].cast(\"date\"))  # Convert to date type\ndata \u003d data.withColumn(\"lag_nuovi_positivi\", lag(\"nuovi_positivi\", 1).over(Window.orderBy(\"date\")))\n\n# Drop rows with missing values\ndata \u003d data.dropna()\n\n# Assemble features\nfeature_columns \u003d [\"lag_nuovi_positivi\"]  # You can add more features here\nassembler \u003d VectorAssembler(inputCols\u003dfeature_columns, outputCol\u003d\"features\")\ndata \u003d assembler.transform(data)\n\n# Split data into training and testing sets\ntrain_data, test_data \u003d data.randomSplit([0.8, 0.2], seed\u003d123)\n\n# Create a Linear Regression model\nlr \u003d LinearRegression(featuresCol\u003d\"features\", labelCol\u003d\"nuovi_positivi\")\n\n# Train the model\nlr_model \u003d lr.fit(train_data)\n\n# Make predictions on the test data\npredictions \u003d lr_model.transform(test_data)\n\n# Evaluate the model (you can use different metrics)\nfrom pyspark.ml.evaluation import RegressionEvaluator\nevaluator \u003d RegressionEvaluator(labelCol\u003d\"nuovi_positivi\", predictionCol\u003d\"prediction\", metricName\u003d\"rmse\")\nrmse \u003d evaluator.evaluate(predictions)\nprint(\"Root Mean Squared Error (RMSE):\", rmse)\n\n# Create a DataFrame for the next 30 days\nfrom datetime import datetime, timedelta\nlast_date \u003d data.select(\"date\").orderBy(\"date\", ascending\u003dFalse).first()[0]\nnext_30_days \u003d [(last_date + timedelta(days\u003di)) for i in range(1, 31)]\nnext_30_days_df \u003d spark.createDataFrame([(day,) for day in next_30_days], [\"date\"])\n\n# Add lag feature to the next 30 days DataFrame\nnext_30_days_df \u003d next_30_days_df.withColumn(\"lag_nuovi_positivi\", lag(\"nuovi_positivi\", 1).over(Window.orderBy(\"date\")))\n\n# Assemble features for the next 30 days\nnext_30_days_df \u003d assembler.transform(next_30_days_df)\n\n# Make predictions for the next 30 days\npredictions_next_30_days \u003d lr_model.transform(next_30_days_df)\n\n# Show predictions for the next 30 days\npredictions_next_30_days.select(\"date\", \"prediction\").show()\n",
      "user": "anonymous",
      "dateUpdated": "2023-08-27 16:56:08.022",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1693155368022_2118150164",
      "id": "paragraph_1693065029201_610546492",
      "dateCreated": "2023-08-27 16:56:08.022",
      "status": "READY"
    }
  ],
  "name": "model_evaluation",
  "id": "2JA6XS1ZH",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}